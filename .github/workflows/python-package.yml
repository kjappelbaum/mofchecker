# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
#   schedule:
#     # Nightly tests run on master by default:
#     #   Scheduled workflows run on the latest commit on the default or base branch.
#     #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
#     - cron: "0 0 * * *"

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ["3.7", "3.8"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge
      - name: Install dependencies
        run: |
          conda install openbabel ruamel.yaml
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest -v --cov=mofchecker --cov-report=xml --color=yes tests
      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-{{ '${{ matrix.os }}' }}-py{{ '${{ matrix.python-version }}' }}

  pre-commit:
    strategy:
      matrix:
        python-version: ["3.8"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge
      - name: Install dependencies
        run: |
          conda install openbabel ruamel.yaml
          pip install -e .[pre-commit,testing]
          pip freeze

      - name: Run pre-commit
        run:
          pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
